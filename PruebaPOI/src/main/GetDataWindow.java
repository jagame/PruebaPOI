/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author jagam
 */
public class GetDataWindow extends javax.swing.JFrame {

    /**
     * Creates new form GetDataWindow
     */
    public GetDataWindow() {
        new LoginWindow(this, true).setVisible(true);
        initComponents();
    }
    
    private DBScheme db;

    public DBScheme getDb() {
        return db;
    }

    public void setDb(DBScheme db) {
        this.db = db;
    }

    public JFileChooser generateExcelFileChooser(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().endsWith(".xls") || f.getName().endsWith(".xlsx");
            }

            @Override
            public String getDescription() {
                return "Excel (xls,xlsx)";
            }
            
        });
        return fileChooser;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExport.setText("Exportar");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        getContentPane().add(btnExport, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        JFileChooser fileChooser = generateExcelFileChooser();
        int i = fileChooser.showOpenDialog(this);
        if( i == JFileChooser.APPROVE_OPTION ){
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            try{
                ExcelUtils.saveDBtoExcel(db, path);
            }catch( IOException | SQLException ex ){
                Logger.getLogger(getClass().getName()).log(java.util.logging.Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error al exportar la base de datos:\n"+ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        try{
            db.close();
        }catch(Exception e){}
    }//GEN-LAST:event_btnExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    // End of variables declaration//GEN-END:variables
}
